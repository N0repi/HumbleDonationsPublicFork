/* TokenList.module.css */

.TokenList {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    height: 60%;
    max-height: 80%;
    width: 30%;
    max-width: 60%;
    justify-items: center;
    padding: 0px;
    opacity: 90%;

    z-index: 999;
    background-color: transparent;
    color: inherit;
    transition-duration: 200ms;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-property: transform, opacity, visibility;
    overflow-y: hidden;

    border-radius: 0.5rem;
}

:where(.TokenList) {
    align-items: center;
}
.TokenList-open,
.TokenList:target,
.TokenList-toggle:checked + .TokenList,
.TokenList[open] {
    pointer-events: auto;
    visibility: visible;
    opacity: 1;
}
.TokenList-open,
.TokenList:target,
.TokenList-toggle:checked + .TokenList,
.TokenList[open] {
    pointer-events: auto;
    visibility: visible;
    opacity: 1;
}
.TokenList-open,
.TokenList:target,
.TokenList-toggle:checked + .TokenList,
.TokenList[open] {
    pointer-events: auto;
    visibility: visible;
    opacity: 1;
}
:root:has(
        :is(
                .TokenList-open,
                .TokenList:target,
                .TokenList-toggle:checked + .TokenList,
                .TokenList[open]
            )
    ) {
    overflow: hidden;
}
:root:has(
        :is(
                .TokenList-open,
                .TokenList:target,
                .TokenList-toggle:checked + .TokenList,
                .TokenList[open]
            )
    ) {
    overflow: hidden;
}
:root:has(
        :is(
                .TokenList-open,
                .TokenList:target,
                .TokenList-toggle:checked + .TokenList,
                .TokenList[open]
            )
    ) {
    overflow: hidden;
}
.TokenList:not(dialog:not(.TokenList-open)),
.TokenList::backdrop {
    background-color: rgba(0, 0, 0, 0.3);
    animation: modal-pop 0.2s ease-out;
}
.TokenList:not(dialog:not(.TokenList-open)),
.TokenList::backdrop {
    background-color: rgba(0, 0, 0, 0.3);
    animation: modal-pop 0.2s ease-out;
}
.TokenList-open .TokenList_box,
.TokenList-toggle:checked + .TokenList .TokenList_box,
.TokenList:target .TokenList_box,
.TokenList[open] .TokenList_box {
    --tw-translate-y: 0px;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
        skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
        scaleY(var(--tw-scale-y));
}
.TokenList-open .TokenList_box,
.TokenList-toggle:checked + .TokenList .TokenList_box,
.TokenList:target .TokenList_box,
.TokenList[open] .TokenList_box {
    --tw-translate-y: 0px;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
        skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
        scaleY(var(--tw-scale-y));
}
.TokenList-open .TokenList_box,
.TokenList-toggle:checked + .TokenList .TokenList_box,
.TokenList:target .TokenList_box,
.TokenList[open] .TokenList_box {
    --tw-translate-y: 0px;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
        skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
        scaleY(var(--tw-scale-y));
}

.TokenList_title {
    width: 100%;
    padding: 0.5rem 1rem;
    font-weight: 900;
    line-height: 0;
    color: #e44bca;
    font-size: 1rem;
    padding: 1.2rem;
    border-radius: 0.5rem;
}

.TokenList_box {
    max-height: calc(100vh - 5em);
    grid-column-start: 1;
    grid-row-start: 1;
    width: 91.666667%;
    max-width: 32rem /* 512px */;
    --tw-scale-x: 0.9;
    --tw-scale-y: 0.9;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
        skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
        scaleY(var(--tw-scale-y));
    border-bottom-right-radius: var(--rounded-box, 1rem /* 16px */);
    border-bottom-left-radius: var(--rounded-box, 1rem /* 16px */);
    border-top-left-radius: var(--rounded-box, 1rem /* 16px */);
    border-top-right-radius: var(--rounded-box, 1rem /* 16px */);
    --tw-bg-opacity: 1;
    background-color: transparent;
    padding: 1.5rem /* 24px */;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
        opacity, box-shadow, transform, filter, backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: 200ms;
    box-shadow: rgba(0, 0, 0, 0.25) 0px 25px 50px -12px;
}

.TokenList-open .TokenList_box,
.TokenList-toggle:checked + .TokenList .TokenList_box,
.TokenList:target .TokenList_box,
.TokenList[open] .TokenList_box {
    --tw-translate-y: 0px;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
        skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
        scaleY(var(--tw-scale-y));
}
.TokenList-open .TokenList_box,
.TokenList-toggle:checked + .TokenList .TokenList_box,
.TokenList:target .TokenList_box,
.TokenList[open] .TokenList_box {
    --tw-translate-y: 0px;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
        skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
        scaleY(var(--tw-scale-y));
}
.TokenList-open .TokenList_box,
.TokenList-toggle:checked + .TokenList .TokenList_box,
.TokenList:target .TokenList_box,
.TokenList[open] .TokenList_box {
    --tw-translate-y: 0px;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
        skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
        scaleY(var(--tw-scale-y));
}
.TokenList-open .TokenList_box,
.TokenList-toggle:checked + .TokenList .TokenList_box,
.TokenList:target .TokenList_box,
.TokenList[open] .TokenList_box {
    --tw-translate-y: 0px;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
        skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
        scaleY(var(--tw-scale-y));
}
.TokenList-top :where(.TokenList_box) {
    width: 100%;
    max-width: none;
    --tw-translate-y: -2.5rem /* -40px */;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
        skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
        scaleY(var(--tw-scale-y));
    border-bottom-right-radius: var(--rounded-box, 1rem /* 16px */);
    border-bottom-left-radius: var(--rounded-box, 1rem /* 16px */);
    border-top-left-radius: 0px;
    border-top-right-radius: 0px;
}
.TokenList-middle :where(.TokenList_box) {
    width: 91.666667%;
    max-width: 32rem /* 512px */;
    --tw-translate-y: 0px;
    --tw-scale-x: 0.9;
    --tw-scale-y: 0.9;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
        skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
        scaleY(var(--tw-scale-y));
    border-top-left-radius: var(--rounded-box, 1rem /* 16px */);
    border-top-right-radius: var(--rounded-box, 1rem /* 16px */);
    border-bottom-right-radius: var(--rounded-box, 1rem /* 16px */);
    border-bottom-left-radius: var(--rounded-box, 1rem /* 16px */);
}
.TokenList-bottom :where(.TokenList_box) {
    width: 100%;
    max-width: none;
    --tw-translate-y: 2.5rem /* 40px */;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
        skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
        scaleY(var(--tw-scale-y));
    border-top-left-radius: var(--rounded-box, 1rem /* 16px */);
    border-top-right-radius: var(--rounded-box, 1rem /* 16px */);
    border-bottom-right-radius: 0px;
    border-bottom-left-radius: 0px;
}

.TokenList_box_info {
    display: grid;
    grid-template-columns: 1fr 5fr;
    gap: 1rem;
    align-items: center;
}

.TokenList_box_info p span {
    font-weight: 900;
    color: #e44bca;
    margin-right: 0.5rem;
}

.TokenList_box_info_symbol {
    background-color: #e44bca;

    padding: 0.5rem;
    border-radius: 0.5rem;
    font-weight: 700;
}

/* import */

@media only screen and (max-width: 35em) {
    .TokenList {
        margin-left: 0;
        width: 90%;
    }
    .TokenList_close {
        right: 1rem;
    }
}
